[1/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/test_blink_main.c.obj
[2/9] Linking C static library esp-idf\main\libmain.a
[3/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D F:\ESP-IDF\Unit_test\blink_test\test\build\bootloader\esp-idf\esptool_py && F:\ESP-IDF\Installation\Espressif\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe F:/ESP-IDF/Installation/Espressif/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 F:/ESP-IDF/Unit_test/blink_test/test/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable blink_test.elf
[6/7] Generating binary image from built executable
esptool.py v4.7.dev1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated F:/ESP-IDF/Unit_test/blink_test/test/build/blink_test.bin
[7/7] cmd.exe /C "cd /D F:\ESP-IDF\Unit_test\blink_test\test\build\esp-idf\esptool_py && F:\ESP-IDF\Installation\Espressif\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe F:/ESP-IDF/Installation/Espressif/Espressif/frameworks/esp-idf-v5.1.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app F:/ESP-IDF/Unit_test/blink_test/test/build/partition_table/partition-table.bin F:/ESP-IDF/Unit_test/blink_test/test/build/blink_test.bin"
blink_test.bin binary size 0x2b780 bytes. Smallest app partition is 0x100000 bytes. 0xd4880 bytes (83%) free.
